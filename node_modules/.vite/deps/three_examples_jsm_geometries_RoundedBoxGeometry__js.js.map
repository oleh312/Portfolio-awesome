{
  "version": 3,
  "sources": ["../../three/examples/jsm/geometries/RoundedBoxGeometry.js"],
  "sourcesContent": ["import {\r\n\tBoxGeometry,\r\n\tVector3\r\n} from 'three';\r\n\r\nconst _tempNormal = new Vector3();\r\n\r\nfunction getUv( faceDirVector, normal, uvAxis, projectionAxis, radius, sideLength ) {\r\n\r\n\tconst totArcLength = 2 * Math.PI * radius / 4;\r\n\r\n\t// length of the planes between the arcs on each axis\r\n\tconst centerLength = Math.max( sideLength - 2 * radius, 0 );\r\n\tconst halfArc = Math.PI / 4;\r\n\r\n\t// Get the vector projected onto the Y plane\r\n\t_tempNormal.copy( normal );\r\n\t_tempNormal[ projectionAxis ] = 0;\r\n\t_tempNormal.normalize();\r\n\r\n\t// total amount of UV space alloted to a single arc\r\n\tconst arcUvRatio = 0.5 * totArcLength / ( totArcLength + centerLength );\r\n\r\n\t// the distance along one arc the point is at\r\n\tconst arcAngleRatio = 1.0 - ( _tempNormal.angleTo( faceDirVector ) / halfArc );\r\n\r\n\tif ( Math.sign( _tempNormal[ uvAxis ] ) === 1 ) {\r\n\r\n\t\treturn arcAngleRatio * arcUvRatio;\r\n\r\n\t} else {\r\n\r\n\t\t// total amount of UV space alloted to the plane between the arcs\r\n\t\tconst lenUv = centerLength / ( totArcLength + centerLength );\r\n\t\treturn lenUv + arcUvRatio + arcUvRatio * ( 1.0 - arcAngleRatio );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass RoundedBoxGeometry extends BoxGeometry {\r\n\r\n\tconstructor( width = 1, height = 1, depth = 1, segments = 2, radius = 0.1 ) {\r\n\r\n\t\t// ensure segments is odd so we have a plane connecting the rounded corners\r\n\t\tsegments = segments * 2 + 1;\r\n\r\n\t\t// ensure radius isn't bigger than shortest side\r\n\t\tradius = Math.min( width / 2, height / 2, depth / 2, radius );\r\n\r\n\t\tsuper( 1, 1, 1, segments, segments, segments );\r\n\r\n\t\t// if we just have one segment we're the same as a regular box\r\n\t\tif ( segments === 1 ) return;\r\n\r\n\t\tconst geometry2 = this.toNonIndexed();\r\n\r\n\t\tthis.index = null;\r\n\t\tthis.attributes.position = geometry2.attributes.position;\r\n\t\tthis.attributes.normal = geometry2.attributes.normal;\r\n\t\tthis.attributes.uv = geometry2.attributes.uv;\r\n\r\n\t\t//\r\n\r\n\t\tconst position = new Vector3();\r\n\t\tconst normal = new Vector3();\r\n\r\n\t\tconst box = new Vector3( width, height, depth ).divideScalar( 2 ).subScalar( radius );\r\n\r\n\t\tconst positions = this.attributes.position.array;\r\n\t\tconst normals = this.attributes.normal.array;\r\n\t\tconst uvs = this.attributes.uv.array;\r\n\r\n\t\tconst faceTris = positions.length / 6;\r\n\t\tconst faceDirVector = new Vector3();\r\n\t\tconst halfSegmentSize = 0.5 / segments;\r\n\r\n\t\tfor ( let i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\r\n\r\n\t\t\tposition.fromArray( positions, i );\r\n\t\t\tnormal.copy( position );\r\n\t\t\tnormal.x -= Math.sign( normal.x ) * halfSegmentSize;\r\n\t\t\tnormal.y -= Math.sign( normal.y ) * halfSegmentSize;\r\n\t\t\tnormal.z -= Math.sign( normal.z ) * halfSegmentSize;\r\n\t\t\tnormal.normalize();\r\n\r\n\t\t\tpositions[ i + 0 ] = box.x * Math.sign( position.x ) + normal.x * radius;\r\n\t\t\tpositions[ i + 1 ] = box.y * Math.sign( position.y ) + normal.y * radius;\r\n\t\t\tpositions[ i + 2 ] = box.z * Math.sign( position.z ) + normal.z * radius;\r\n\r\n\t\t\tnormals[ i + 0 ] = normal.x;\r\n\t\t\tnormals[ i + 1 ] = normal.y;\r\n\t\t\tnormals[ i + 2 ] = normal.z;\r\n\r\n\t\t\tconst side = Math.floor( i / faceTris );\r\n\r\n\t\t\tswitch ( side ) {\r\n\r\n\t\t\t\tcase 0: // right\r\n\r\n\t\t\t\t\t// generate UVs along Z then Y\r\n\t\t\t\t\tfaceDirVector.set( 1, 0, 0 );\r\n\t\t\t\t\tuvs[ j + 0 ] = getUv( faceDirVector, normal, 'z', 'y', radius, depth );\r\n\t\t\t\t\tuvs[ j + 1 ] = 1.0 - getUv( faceDirVector, normal, 'y', 'z', radius, height );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1: // left\r\n\r\n\t\t\t\t\t// generate UVs along Z then Y\r\n\t\t\t\t\tfaceDirVector.set( - 1, 0, 0 );\r\n\t\t\t\t\tuvs[ j + 0 ] = 1.0 - getUv( faceDirVector, normal, 'z', 'y', radius, depth );\r\n\t\t\t\t\tuvs[ j + 1 ] = 1.0 - getUv( faceDirVector, normal, 'y', 'z', radius, height );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2: // top\r\n\r\n\t\t\t\t\t// generate UVs along X then Z\r\n\t\t\t\t\tfaceDirVector.set( 0, 1, 0 );\r\n\t\t\t\t\tuvs[ j + 0 ] = 1.0 - getUv( faceDirVector, normal, 'x', 'z', radius, width );\r\n\t\t\t\t\tuvs[ j + 1 ] = getUv( faceDirVector, normal, 'z', 'x', radius, depth );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 3: // bottom\r\n\r\n\t\t\t\t\t// generate UVs along X then Z\r\n\t\t\t\t\tfaceDirVector.set( 0, - 1, 0 );\r\n\t\t\t\t\tuvs[ j + 0 ] = 1.0 - getUv( faceDirVector, normal, 'x', 'z', radius, width );\r\n\t\t\t\t\tuvs[ j + 1 ] = 1.0 - getUv( faceDirVector, normal, 'z', 'x', radius, depth );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 4: // front\r\n\r\n\t\t\t\t\t// generate UVs along X then Y\r\n\t\t\t\t\tfaceDirVector.set( 0, 0, 1 );\r\n\t\t\t\t\tuvs[ j + 0 ] = 1.0 - getUv( faceDirVector, normal, 'x', 'y', radius, width );\r\n\t\t\t\t\tuvs[ j + 1 ] = 1.0 - getUv( faceDirVector, normal, 'y', 'x', radius, height );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 5: // back\r\n\r\n\t\t\t\t\t// generate UVs along X then Y\r\n\t\t\t\t\tfaceDirVector.set( 0, 0, - 1 );\r\n\t\t\t\t\tuvs[ j + 0 ] = getUv( faceDirVector, normal, 'x', 'y', radius, width );\r\n\t\t\t\t\tuvs[ j + 1 ] = 1.0 - getUv( faceDirVector, normal, 'y', 'x', radius, height );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { RoundedBoxGeometry };\r\n"],
  "mappings": "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",
  "names": []
}
